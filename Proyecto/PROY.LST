Turbo Assembler	 Version 4.1	    05/12/19 23:24:55	    Page 1
proy.ASM



      1				     include macro.asm
1     2				     pintarM macro
1     3					     mov ah, 0Ch
1     4					     mov al, ColorCommand; color
1     5					     mov bh, 0
1     6					     int 10h
1     7				     endm
1     8
1     9				     ppila macro
1    10					     push cx
1    11					     push bx
1    12					     call busqueda
1    13					     pop cx
1    14				     endm
1    15
1    16				     ListPush  Macro lista
1    17					 IRP i,<lista>
1    18						     Push i
1    19					 EndM
1    20				     EndM
1    21
1    22				     ListPop  Macro lista
1    23					     IRP i,<lista>
1    24						     Pop i
1    25					     EndM
1    26				     EndM
1    27
1    28				     comparar Macro line, var
1    29					     mov cx, 2
1    30					     lea di, line
1    31					     lea si, var
1    32					     rep cmpsb
1    33				     endM
1    34
1    35				     imprimirP macro msj
1    36					     mov ah, 09h
1    37					     lea dx, msj
1    38					     int 21h
1    39				     endM
     40				     ;------------------------------------------------------------------------------
     41
     42	0000			     Pila Segment
     43	0000  FFFF*(??)		      db 0FFFFh	Dup (?)
     44	FFFF			     Pila EndS
     45
     46				     ;------------------------------------------------------------------------------
     47
     48	0000			     Datos Segment
     49	0000  04			     ce	db 4
     50	0001  FF*(??)			     filename db 255 dup (?)
     51	0100  00					      db 0
     52	0101  FF*(??)			     clave db 255 dup (?)
     53	0200  ????			     sclave dw ?
     54	0202  ????			     lclave dw ?
     55	0204  ????			     fila dw ?
     56	0206  ????			     columna dw	?
     57	0208  ????			     extension dw ?
Turbo Assembler	 Version 4.1	    05/12/19 23:24:55	    Page 2
proy.ASM



     58	020A  FF*(??)			     texto db 255 dup (?)
     59
     60	0309  00 04 02 06 01 05	03+	     paleta  db	00h, 04h, 02h, 06h, 01h, 05h, 03h, 08h,	07h, 0Ch, 0Ah, 0Eh, 9h,	0Dh, 0Bh, 0Fh
     61	      08 07 0C 0A 0E 09	0D+
     62	      0B 0F
     63
     64	0319  ????			     fileH dw ?
     65
     66	031B  76*(00)			     Header db 118 dup (0)
     67	0391  0280*(00)			     Header2 db	640 dup	(0)
     68	0611  10*(00)			     Header3 db	16 dup (0)
     69	0621  ??			     ColorCommand db ?
     70	0622  FF*(??)			     LineCommand db    0FFh Dup	(?)
     71	0721  24					     db	'$'
     72
     73	0722  ????			     ancho dw ?
     74	0724  ????			     largo dw ?
     75
     76	0726  2D 2D 2D 2D 2D 2D	2D+	     msg1 db '--------Programa esteganografia--------'
     77	      2D 50 72 6F 67 72	61+
     78	      6D 61 20 65 73 74	65+
     79	      67 61 6E 6F 67 72	61+
     80	      66 69 61 2D 2D 2D	2D+
     81	      2D 2D 2D 2D
     82	074D  0A 0D 46 6F 72 6D	61+	     msg2 db 10,13,'Formato de uso: estega /e /t:"texto" /? /d /c:"clave" /bmp:"archivo.bmp"'
     83	      74 6F 20 64 65 20	75+
     84	      73 6F 3A 20 65 73	74+
     85	      65 67 61 20 2F 65	20+
     86	      2F 74 3A 22 74 65	78+
     87	      74 6F 22 20 2F 3F	20+
     88	      2F 64 20 2F 63 3A	22+
     89	      63 6C 61 76 65 22	20+
     90	      2F 62 6D 70 3A 22	61+
     91	      72 63 68 69 76 6F	2E+
     92	      62 6D 70 22
     93	0797  0A 0D 2F 68 20 6F	20+	     msg3 db 10,13,'/h o /H Ayuda'
     94	      2F 48 20 41 79 75	64+
     95	      61
     96	07A6  0A 0D 2F 65 20 6F	20+	     msg4 db 10,13,'/e o /E Esteganografiar el mensaje "texto" con la "clave" en el "bmp"'
     97	      2F 45 20 45 73 74	65+
     98	      67 61 6E 6F 67 72	61+
     99	      66 69 61 72 20 65	6C+
    100	      20 6D 65 6E 73 61	6A+
    101	      65 20 22 74 65 78	74+
    102	      6F 22 20 63 6F 6E	20+
    103	      6C 61 20 22 63 6C	61+
    104	      76 65 22 20 65 6E	20+
    105	      65 6C 20 22 62 6D	70+
    106	      22
    107	07ED  0A 0D 2F 64 20 6F	20+	     msg5 db 10,13,'/d o /D Desencriptar el mensaje con	la "clave" en el bmp'
    108	      2F 44 20 44 65 73	65+
    109	      6E 63 72 69 70 74	61+
    110	      72 20 65 6C 20 6D	65+
    111	      6E 73 61 6A 65 20	63+
    112	      6F 6E 20 6C 61 20	22+
    113	      63 6C 61 76 65 22	20+
    114	      65 6E 20 65 6C 20	62+
Turbo Assembler	 Version 4.1	    05/12/19 23:24:55	    Page 3
proy.ASM



    115	      6D 70
    116	0827  0A 0D 22 61 72 63	68+	     msg6 db 10,13,'"archivo" Es el nombre del archivo debe ser	un bmp de 16 colores'
    117	      69 76 6F 22 20 45	73+
    118	      20 65 6C 20 6E 6F	6D+
    119	      62 72 65 20 64 65	6C+
    120	      20 61 72 63 68 69	76+
    121	      6F 20 64 65 62 65	20+
    122	      73 65 72 20 75 6E	20+
    123	      62 6D 70 20 64 65	20+
    124	      31 36 20 63 6F 6C	6F+
    125	      72 65 73
    126	0869  0A 0D 65 73 74 65	67+	     msg7 db 10,13,'estega /bmp:"archivo.bmp" para mostrar imagen$'
    127	      61 20 2F 62 6D 70	3A+
    128	      22 61 72 63 68 69	76+
    129	      6F 2E 62 6D 70 22	20+
    130	      70 61 72 61 20 6D	6F+
    131	      73 74 72 61 72 20	69+
    132	      6D 61 67 65 6E 24
    133
    134	0899  2F 68			     var1 db '/h'
    135	089B  2F 65			     var2 db '/e'
    136	089D  2F 64			     var3 db '/d'
    137	089F  2F 62 6D 70		     var4 db '/bmp'
    138	08A3			     Datos EndS
    139
    140	0000			     Codigo Segment
    141				     Assume CS:Codigo, DS:Datos
    142
    143	0000			     imprimir proc near
    144	0000  B4 09			     mov ah, 09h
    145	0002  BA 0726r			     lea dx, msg1
    146	0005  CD 21			     int 21h
    147	0007  C3			     ret
    148	0008			     imprimir endp
    149
    150	0008			     sumaD proc	near
    151	0008  58			     pop ax
    152	0009  59			     pop cx
    153	000A  50			     push ax
    154	000B  33 DB			     xor bx, bx
    155	000D				     cicloSuma:
    156	000D  83 FB 10				     cmp bx, 10h
    157	0010  74 04				     jz	salirSumaD
    158	0012  41				     inc cx
    159	0013  43				     inc bx
    160	0014  EB F7				     jmp cicloSuma
    161
    162	0016				     salirSumaD:
    163	0016  58				     pop ax
    164	0017  51				     push cx
    165	0018  50				     push ax
    166	0019  C3				     ret
    167	001A			     sumaD endp
    168
    169	001A			     desencriptarPal proc near
    170	001A  BE 020Ar			     lea si, texto
    171	001D				     cicloDes:
Turbo Assembler	 Version 4.1	    05/12/19 23:24:55	    Page 4
proy.ASM



    172	001D  8A 04				     mov al, byte ptr [si]
    173	001F  3C 24				     cmp al, "$"
    174	0021  74 09				     jz	salidaDes
    175	0023  2A 06 0000r			     sub al, ce
    176	0027  88 04				     mov byte ptr [si],	al
    177	0029  46				     inc si
    178	002A  EB F1				     jmp cicloDes
    179
    180	002C				     salidaDes:
    181	002C  C3				     ret
    182	002D			     desencriptarPal endp
    183
    184	002D			     encriptarPal proc near
    185	002D  BE 020Ar			     lea si, texto
    186	0030				     cicloEnc:
    187	0030  8A 04				     mov al, byte ptr [si]
    188	0032  3C 24				     cmp al, "$"
    189	0034  74 09				     jz	salidaEnc
    190	0036  02 06 0000r			     add al, ce
    191	003A  88 04				     mov byte ptr [si],	al
    192	003C  46				     inc si
    193	003D  EB F1				     jmp cicloEnc
    194
    195	003F				     salidaEnc:
    196	003F  C3				     ret
    197	0040			     encriptarPal endp
    198
    199	0040			     escribir proc near
    200	0040  BE 0000			     mov si, 0000h
    201	0043  B4 40			     mov ah,40h
    202	0045  8B 1E 0319r		     mov bx,[fileH]
    203	0049  8B 0E 0208r		     mov cx,extension
    204	004D  BA 020Ar			     lea dx,texto
    205	0050  CD 21			     int 21h
    206	0052  C3			     ret
    207	0053			     escribir endp
    208
    209	0053			     ubicadorD proc near
    210	0053  A1 0200r			     mov ax, sclave
    211	0056  8B 1E 0200r		     mov bx, sclave
    212	005A  25 FFF0			     and ax, 1111111111110000b
    213	005D  83 E3 0F			     and bx, 0000000000001111b
    214	0060  A3 0204r			     mov fila, ax
    215	0063  89 1E 0206r		     mov columna, bx
    216	0067  B4 3F			     mov ah,3fh
    217	0069  8B 1E 0319r		     mov bx,[fileH]
    218	006D  B9 0010			     mov cx,16
    219	0070  BA 0611r			     mov dx,offset Header3
    220	0073  CD 21			     int 21h
    221	0075  33 C9			     xor cx,cx
    222
    223	0077				     bfilaD:
    224	0077  3B 0E 0204r			     cmp cx, fila
    225	007B  74 15				     jz	procesoCD
    226	007D  51				     push cx
    227	007E  B4 3F				     mov ah,3fh
    228	0080  8B 1E 0319r			     mov bx,[fileH]
Turbo Assembler	 Version 4.1	    05/12/19 23:24:55	    Page 5
proy.ASM



    229	0084  B9 0010				     mov cx,16
    230	0087  BA 0611r				     mov dx,offset Header3
    231	008A  CD 21				     int 21h
    232	008C  E8 FF79				     call sumaD
    233	008F  59				     pop cx
    234	0090  EB E5				     jmp bfilaD
    235
    236	0092				     procesoCD:
    237	0092  33 C0				     xor ax,ax
    238	0094  33 C9				     xor cx,cx
    239	0096  33 F6				     xor si,si
    240	0098  BE 0611r				     lea si, [Header3]
    241	009B				     bcolumnaD:
    242	009B  3B 0E 0206r			     cmp cx, columna
    243	009F  74 06				     jz	salidaUD
    244	00A1  8A 04				     mov al, byte ptr [si]
    245	00A3  41				     inc cx
    246	00A4  46				     inc si
    247	00A5  EB F4				     jmp bcolumnaD
    248
    249	00A7				     salidaUD:
    250	00A7  58				     pop ax
    251	00A8  56				     push si
    252	00A9  50				     push ax
    253	00AA  BF 020Ar				     lea di, texto
    254	00AD					     ciclo1:
    255	00AD  B4 3F					     mov ah,3fh
    256	00AF  8B 1E 0319r				     mov bx,[fileH]
    257	00B3  B9 0010					     mov cx,16
    258	00B6  BA 0611r					     mov dx,offset Header3
    259	00B9  CD 21					     int 21h
    260	00BB  BE 0611r					     lea si, Header3
    261	00BE  33 C9					     xor cx, cx
    262	00C0  51					     push cx
    263	00C1						     ciclo2:
    264	00C1  59						     pop cx
    265	00C2  80 3C 24						     cmp byte ptr [si],	24h
    266	00C5  74 0F						     jz	salidaD
    267	00C7  83 F9 10						     cmp cx, 16
    268	00CA  74 E1						     jz	ciclo1
    269	00CC  8A 04						     mov al, byte ptr [si]
    270	00CE  88 05						     mov byte ptr [di],	al
    271	00D0  46						     inc si
    272	00D1  47						     inc di
    273	00D2  41						     inc cx
    274	00D3  51						     push cx
    275	00D4  EB EB						     jmp ciclo2
    276
    277	00D6				     salidaD:
    278	00D6  8A 04				     mov al, byte ptr [si]
    279	00D8  88 05				     mov byte ptr [di],	al
    280	00DA  E8 FF3D				     call desencriptarPal
    281						     imprimirP texto
1   282	00DD  B4 09			     mov ah, 09h
1   283	00DF  BA 020Ar			     lea dx, texto
1   284	00E2  CD 21			     int 21h
    285	00E4  C3				     ret
Turbo Assembler	 Version 4.1	    05/12/19 23:24:55	    Page 6
proy.ASM



    286	00E5			     ubicadorD endp
    287
    288	00E5			     ubicador proc near
    289	00E5  A1 0200r			     mov ax, sclave
    290	00E8  8B 1E 0200r		     mov bx, sclave
    291	00EC  25 FFF0			     and ax, 1111111111110000b
    292	00EF  83 E3 0F			     and bx, 0000000000001111b
    293	00F2  A3 0204r			     mov fila, ax
    294	00F5  89 1E 0206r		     mov columna, bx
    295	00F9  B4 3F			     mov ah,3fh
    296	00FB  8B 1E 0319r		     mov bx,[fileH]
    297	00FF  B9 0010			     mov cx,16
    298	0102  BA 0611r			     mov dx,offset Header3
    299	0105  CD 21			     int 21h
    300	0107  33 C9			     xor cx,cx
    301
    302	0109				     bfila:
    303	0109  3B 0E 0204r			     cmp cx, fila
    304	010D  74 15				     jz	procesoC
    305	010F  51				     push cx
    306	0110  B4 3F				     mov ah,3fh
    307	0112  8B 1E 0319r			     mov bx,[fileH]
    308	0116  B9 0010				     mov cx,16
    309	0119  BA 0611r				     mov dx,offset Header3
    310	011C  CD 21				     int 21h
    311	011E  E8 FEE7				     call sumaD
    312	0121  59				     pop cx
    313	0122  EB E5				     jmp bfila
    314
    315	0124				     procesoC:
    316	0124  33 C0				     xor ax,ax
    317	0126  33 C9				     xor cx,cx
    318	0128  33 F6				     xor si,si
    319	012A  BE 0611r				     lea si, [Header3]
    320	012D				     bcolumna:
    321	012D  3B 0E 0206r			     cmp cx, columna
    322	0131  74 06				     jz	salidaU
    323	0133  8A 04				     mov al, byte ptr [si]
    324	0135  41				     inc cx
    325	0136  46				     inc si
    326	0137  EB F4				     jmp bcolumna
    327
    328	0139				     salidaU:
    329	0139  58				     pop ax
    330	013A  56				     push si
    331	013B  50				     push ax
    332	013C  E8 FEEE				     call encriptarPal
    333	013F  E8 FEFE				     call escribir
    334	0142  C3				     ret
    335	0143			     ubicador endp
    336
    337	0143			     sumadorC proc near
    338	0143  BE 0101r			     lea si, clave
    339	0146  33 C9			     xor cx,cx
    340	0148  8A 04			     mov al, byte ptr [si]
    341	014A  46			     inc si
    342	014B  41			     inc cx
Turbo Assembler	 Version 4.1	    05/12/19 23:24:55	    Page 7
proy.ASM



    343	014C  32 E4			     xor ah,ah
    344	014E  A3 0200r			     mov sclave, ax
    345	0151  3C 24			     cmp al, '$'
    346	0153  74 11			     jz	fciclo
    347
    348	0155				     ciclo:
    349	0155  8A 1C				     mov bl, byte ptr [si]
    350	0157  80 FB 24				     cmp bl, '$'
    351	015A  74 0A				     jz	fciclo
    352	015C  32 FF				     xor bh,bh
    353	015E  01 1E 0200r			     add sclave, bx
    354	0162  46				     inc si
    355	0163  41				     inc cx
    356	0164  EB EF				     jmp ciclo
    357
    358	0166				     fciclo:
    359	0166  89 0E 0202r		     mov lclave, cx
    360	016A  A1 0200r			     mov ax, sclave
    361	016D				     sciclo:
    362	016D  83 F9 00				     cmp cx, 0000h
    363	0170  74 07				     jz	salir
    364	0172  01 06 0200r			     add sclave, ax
    365	0176  49				     dec cx
    366	0177  EB F4				     jmp sciclo
    367
    368	0179				     salir:
    369	0179  C3				     ret
    370
    371	017A			     sumadorC endp
    372
    373	017A			     busqueda proc near
    374	017A  59			     pop cx
    375	017B  58			     pop ax
    376	017C  51			     push cx
    377	017D  8A C4			     mov al, ah
    378	017F  32 E4			     xor ah, ah
    379	0181  BB 0309r			     lea bx, paleta
    380	0184  D7			     xlat
    381	0185  A2 0621r			     mov ColorCommand, al
    382	0188  C3			     ret
    383	0189			     endP
    384
    385	0189			     abrirArchivo proc
    386	0189  B4 3D			     mov ah, 3Dh
    387	018B  B0 02			     mov al, 02h
    388	018D  BA 0001r			     mov dx, offset filename
    389	0190  CD 21			     int 21h
    390	0192  A3 0319r			     mov [fileH], ax
    391	0195  C3			     ret
    392	0196			     endp abrirArchivo
    393
    394	0196			     leerH proc
    395	0196  B4 3F			     mov ah,3fh
    396	0198  8B 1E 0319r		     mov bx,[fileH]
    397	019C  B9 0076			     mov cx,118
    398	019F  BA 031Br			     mov dx,offset Header
    399	01A2  CD 21			     int 21h
Turbo Assembler	 Version 4.1	    05/12/19 23:24:55	    Page 8
proy.ASM



    400
    401	01A4  50			     push ax
    402	01A5  8A 26 032Er		     mov ah, [Header]+19
    403	01A9  A0 032Dr			     mov al, [Header]+18
    404	01AC  A3 0722r			     mov ancho,	ax
    405
    406	01AF  8A 26 0332r		     mov ah, [Header]+23
    407	01B3  A0 0331r			     mov al, [Header]+22
    408	01B6  A3 0724r			     mov largo,	ax
    409	01B9  58			     pop ax
    410
    411	01BA  C3			     ret
    412	01BB			     endp leerH
    413
    414	01BB			     pintar proc
    415	01BB  B4 00			     mov ah, 00h
    416	01BD  B0 12			     mov al, 12h
    417	01BF  CD 10			     int 10h
    418	01C1  BA 01E0			     mov dx, 1E0H
    419	01C4  52			     push dx
    420	01C5			     ploop:
    421
    422	01C5  B8 3F00			     mov ax,3f00h
    423	01C8  8B 1E 0319r		     mov bx,[fileH]
    424	01CC  B9 0140			     mov cx,140h
    425	01CF  BA 0391r			     mov dx,offset Header2
    426	01D2  CD 21			     int 21h
    427	01D4  BE 0391r			     lea si, [Header2]
    428	01D7  5A			     pop dx
    429	01D8  83 FA 00			     cmp dx, 0
    430	01DB  74 49			     jz	re
    431	01DD  B9 0000			     mov cx, 0
    432	01E0				     sloop:
    433	01E0  81 F9 0280			     cmp cx, 280h
    434	01E4  74 3C				     jz	floop
    435	01E6  8A 04				     mov al, byte ptr [si]
    436	01E8  8A 24				     mov ah, byte ptr [si]
    437	01EA  46				     inc si
    438	01EB  24 0F				     and al, 00001111b
    439	01ED  80 E4 F0				     and ah, 11110000b
    440	01F0  D0 C4 D0 C4 D0 C4	D0+		     rol Ah, 4
    441	      C4
    442	01F8  8B D8				     mov bx, ax
    443	01FA  53				     push bx
    444						     ;---------
    445	01FB  33 C0				     xor ax,ax
    446						     ppila
1   447	01FD  51			     push cx
1   448	01FE  53			     push bx
1   449	01FF  E8 FF78			     call busqueda
1   450	0202  59			     pop cx
    451						     pintarM
1   452	0203  B4 0C			     mov ah, 0Ch
1   453	0205  A0 0621r			     mov al, ColorCommand; color
1   454	0208  B7 00			     mov bh, 0
1   455	020A  CD 10			     int 10h
    456						     ;---------
Turbo Assembler	 Version 4.1	    05/12/19 23:24:55	    Page 9
proy.ASM



    457	020C  41				     inc cx
    458	020D  5B				     pop bx
    459	020E  8A FB				     mov bh, bl
    460						     ppila
1   461	0210  51			     push cx
1   462	0211  53			     push bx
1   463	0212  E8 FF65			     call busqueda
1   464	0215  59			     pop cx
    465						     pintarM
1   466	0216  B4 0C			     mov ah, 0Ch
1   467	0218  A0 0621r			     mov al, ColorCommand; color
1   468	021B  B7 00			     mov bh, 0
1   469	021D  CD 10			     int 10h
    470	021F  41				     inc cx
    471						     ;---------
    472	0220  EB BE				     jmp sloop
    473	0222			     floop:
    474	0222  4A			     dec dx
    475	0223  52			     push dx
    476	0224  EB 9F			     jmp ploop
    477
    478	0226			     re:
    479	0226  B4 01			     mov ah,1
    480	0228  CD 21			     int 21h
    481
    482	022A  B4 00			     mov ah, 0
    483	022C  B0 02			     mov al, 2
    484	022E  CD 10			     int 10h
    485
    486	0230  B4 3E			     mov ah,3eh
    487	0232  CD 21			     int 21h
    488
    489	0234  C3			     ret
    490	0235			     endp pintar
    491
    492	0235			     GetCommanderLine Proc Near
    493	      =0080			     LongLC    EQU   80h
    494					     ListPush  <Es, Di,	Si, Cx,	Bp>
2   495	0235  06				     Push Es
2   496	0236  57				     Push Di
2   497	0237  56				     Push Si
2   498	0238  51				     Push Cx
2   499	0239  55				     Push Bp
    500	023A  8B EC			     Mov   Bp,Sp
    501	023C  8C C0			     Mov   Ax,Es
    502	023E  8E D8			     Mov   Ds,Ax
    503	0240  8B 7E 0C			     Mov   Di,12[Bp]
    504	0243  8B 46 0E			     Mov   Ax,14[Bp]
    505	0246  8E C0			     Mov   Es,Ax
    506	0248  33 C9			     Xor   Cx,Cx
    507	024A  8A 0E 0080		     Mov   Cl,Byte Ptr Ds:[LongLC]
    508	024E  BE 0082			     Mov   Si,2[LongLC]
*Warning* proy.ASM(393)	[Constant] assumed to mean immediate constant
    509	0251  F3> A4			     Rep   Movsb
    510					     ListPop <Bp, Bx, Si, Di, Es>
2   511	0253  5D				     Pop Bp
2   512	0254  5B				     Pop Bx
Turbo Assembler	 Version 4.1	    05/12/19 23:24:55	    Page 10
proy.ASM



2   513	0255  5E				     Pop Si
2   514	0256  5F				     Pop Di
2   515	0257  07				     Pop Es
    516	0258  C2 000E			     Ret   14
    517	025B			     GetCommanderLine EndP
    518
    519	025B			     Inicio:
    520	025B  B8 0000s			     Mov   Ax,Seg LineCommand
    521	025E  50			     Push  Ax
    522	025F  B8 0622r			     Lea   Ax,LineCommand
    523	0262  50			     Push  Ax
    524	0263  E8 FFCF			     Call  GetCommanderLine
    525
    526	0266  B8 0000s			     mov ax, datos
    527	0269  8E D8			     mov ds, ax
    528	026B  06			     push es
    529	026C  8E C0			     mov es, ax
    530
    531					     comparar LineCommand, var1
1   532	026E  B9 0002			     mov cx, 2
1   533	0271  BF 0622r			     lea di, LineCommand
1   534	0274  BE 0899r			     lea si, var1
1   535	0277  F3> A6			     rep cmpsb
    536	0279  74 28			     jz	ayuda
    537
    538					     comparar LineCommand, var2
1   539	027B  B9 0002			     mov cx, 2
1   540	027E  BF 0622r			     lea di, LineCommand
1   541	0281  BE 089Br			     lea si, var2
1   542	0284  F3> A6			     rep cmpsb
    543	0286  74 21			     jz	encriptar
    544
    545					     comparar LineCommand, var3
1   546	0288  B9 0002			     mov cx, 2
1   547	028B  BF 0622r			     lea di, LineCommand
1   548	028E  BE 089Dr			     lea si, var3
1   549	0291  F3> A6			     rep cmpsb
    550	0293  74 6D			     jz	desencriptar
    551
    552					     comparar LineCommand, var4
1   553	0295  B9 0002			     mov cx, 2
1   554	0298  BF 0622r			     lea di, LineCommand
1   555	029B  BE 089Fr			     lea si, var4
1   556	029E  F3> A6			     rep cmpsb
    557	02A0  E8 0099			     call mostrarI
    558
    559	02A3				     ayuda:
    560	02A3  E8 FD5A				     call imprimir
    561	02A6  E9 00B4				     jmp final
    562
    563	02A9				     encriptar:
    564	02A9  BE 0628r				     lea si, LineCommand+6
    565	02AC  8A 04				     mov al, byte ptr [si]
    566	02AE  BF 020Ar				     lea di, texto
    567	02B1  33 C9				     xor cx,cx
    568	02B3					     cTexto:
    569	02B3  80 3C 20					     cmp byte ptr [si],	20h
Turbo Assembler	 Version 4.1	    05/12/19 23:24:55	    Page 11
proy.ASM



    570	02B6  74 09					     jz	sTexto
    571	02B8  8A 04					     mov al, byte ptr [si]
    572	02BA  88 05					     mov byte ptr [di],	al
    573	02BC  46					     inc si
    574	02BD  47					     inc di
    575	02BE  41					     inc cx
    576	02BF  EB F2					     jmp cTexto
    577
    578	02C1					     sTexto:
    579	02C1  C6 05 24					     mov byte ptr [di],	24h
    580	02C4  41					     inc cx
    581	02C5  89 0E 0208r				     mov extension, cx
    582	02C9  46					     inc si
    583	02CA  46					     inc si
    584	02CB  46					     inc si
    585	02CC  46					     inc si
    586	02CD  BF 0101r					     lea di, clave
    587	02D0						     cClave:
    588	02D0  80 3C 20						     cmp byte ptr [si],	20h
    589	02D3  74 08						     jz	saClave
    590	02D5  8A 04						     mov al, byte ptr [si]
    591	02D7  88 05						     mov byte ptr [di],	al
    592	02D9  46						     inc si
    593	02DA  47						     inc di
    594	02DB  EB F3						     jmp cClave
    595
    596	02DD					     saClave:
    597	02DD  C6 05 24					     mov byte ptr [di],	24h
    598	02E0  46					     inc si
    599	02E1  46					     inc si
    600	02E2  46					     inc si
    601	02E3  46					     inc si
    602	02E4  46					     inc si
    603	02E5  46					     inc si
    604	02E6  BF 0001r					     lea di, filename
    605	02E9						     cImag:
    606	02E9  80 3C 0D						     cmp byte ptr [si],	0Dh
    607	02EC  74 08						     jz	salidaLector
    608	02EE  8A 04						     mov al, byte ptr [si]
    609	02F0  88 05						     mov byte ptr [di],	al
    610	02F2  46						     inc si
    611	02F3  47						     inc di
    612	02F4  EB F3						     jmp cImag
    613
    614	02F6					     salidaLector:
    615	02F6  E8 FE90					     call abrirArchivo
    616	02F9  E8 FE47					     call sumadorC
    617	02FC  E8 FDE6					     call ubicador
    618	02FF  EB 5C 90					     jmp final
    619
    620	0302				     desencriptar:
    621	0302  BE 0628r				     lea si, LineCommand+6
    622	0305  BF 0101r				     lea di, clave
    623	0308  8A 04				     mov al, byte ptr [si]
    624	030A					     dclave:
    625	030A  80 3C 20					     cmp byte ptr [si],	20h
    626	030D  74 08					     jz	sadClave
Turbo Assembler	 Version 4.1	    05/12/19 23:24:55	    Page 12
proy.ASM



    627	030F  8A 04					     mov al, byte ptr [si]
    628	0311  88 05					     mov byte ptr [di],	al
    629	0313  46					     inc si
    630	0314  47					     inc di
    631	0315  EB F3					     jmp dClave
    632
    633	0317					     sadClave:
    634	0317  C6 05 24					     mov byte ptr [di],	24h
    635	031A  46					     inc si
    636	031B  46					     inc si
    637	031C  46					     inc si
    638	031D  46					     inc si
    639	031E  46					     inc si
    640	031F  46					     inc si
    641	0320  BF 0001r					     lea di, filename
    642	0323						     dciImag:
    643	0323  80 3C 0D						     cmp byte ptr [si],	0Dh
    644	0326  74 08						     jz	salidaDesenciptar
    645	0328  8A 04						     mov al, byte ptr [si]
    646	032A  88 05						     mov byte ptr [di],	al
    647	032C  46						     inc si
    648	032D  47						     inc di
    649	032E  EB F3						     jmp dciImag
    650
    651	0330					     salidaDesenciptar:
    652	0330  E8 FE56					     call abrirArchivo
    653	0333  E8 FE0D					     call sumadorC
    654	0336  E8 FD1A					     call ubicadorD
    655	0339  EB 22 90					     jmp final
    656
    657	033C			     mostrarI proc near
    658	033C  BE 0627r			     lea si, LineCommand+5
    659	033F  BF 0001r			     lea di, filename
    660	0342  8A 04			     mov al, byte ptr [si]
    661	0344				     ciMostrar:
    662	0344  80 3C 0D				     cmp byte ptr [si],	0Dh
    663	0347  74 08				     jz	salidaMostrar
    664	0349  8A 04				     mov al, byte ptr [si]
    665	034B  88 05				     mov byte ptr [di],	al
    666	034D  46				     inc si
    667	034E  47				     inc di
    668	034F  EB F3				     jmp ciMostrar
    669
    670	0351			     mostrarI endp
    671
    672	0351			     salidaMostrar:
    673	0351  E8 FE35			     call abrirArchivo
    674	0354  E8 FE3F			     call leerH
    675	0357  E8 FE61			     call pintar
    676	035A  EB 01 90			     jmp final
    677
    678	035D			     final:
    679	035D  B8 4C00			     mov ax, 4C00h
    680	0360  CD 21			     int 21h
    681	0362			     Codigo EndS
    682					     End Inicio
Turbo Assembler	 Version 4.1	    05/12/19 23:24:55	    Page 13
Symbol Table




Symbol Name			  Type	 Value

??DATE				  Text	 "05/12/19"
??FILENAME			  Text	 "proy	  "
??TIME				  Text	 "23:24:54"
??VERSION			  Number 040A
@CPU				  Text	 0101H
@CURSEG				  Text	 CODIGO
@FILENAME			  Text	 PROY
@WORDSIZE			  Text	 2
ABRIRARCHIVO			  Near	 CODIGO:0189
ANCHO				  Word	 DATOS:0722
AYUDA				  Near	 CODIGO:02A3
BCOLUMNA			  Near	 CODIGO:012D
BCOLUMNAD			  Near	 CODIGO:009B
BFILA				  Near	 CODIGO:0109
BFILAD				  Near	 CODIGO:0077
BUSQUEDA			  Near	 CODIGO:017A
CCLAVE				  Near	 CODIGO:02D0
CE				  Byte	 DATOS:0000
CICLO				  Near	 CODIGO:0155
CICLO1				  Near	 CODIGO:00AD
CICLO2				  Near	 CODIGO:00C1
CICLODES			  Near	 CODIGO:001D
CICLOENC			  Near	 CODIGO:0030
CICLOSUMA			  Near	 CODIGO:000D
CIMAG				  Near	 CODIGO:02E9
CIMOSTRAR			  Near	 CODIGO:0344
CLAVE				  Byte	 DATOS:0101
COLORCOMMAND			  Byte	 DATOS:0621
COLUMNA				  Word	 DATOS:0206
CTEXTO				  Near	 CODIGO:02B3
DCIIMAG				  Near	 CODIGO:0323
DCLAVE				  Near	 CODIGO:030A
DESENCRIPTAR			  Near	 CODIGO:0302
DESENCRIPTARPAL			  Near	 CODIGO:001A
ENCRIPTAR			  Near	 CODIGO:02A9
ENCRIPTARPAL			  Near	 CODIGO:002D
ESCRIBIR			  Near	 CODIGO:0040
EXTENSION			  Word	 DATOS:0208
FCICLO				  Near	 CODIGO:0166
FILA				  Word	 DATOS:0204
FILEH				  Word	 DATOS:0319
FILENAME			  Byte	 DATOS:0001
FINAL				  Near	 CODIGO:035D
FLOOP				  Near	 CODIGO:0222
GETCOMMANDERLINE		  Near	 CODIGO:0235
HEADER				  Byte	 DATOS:031B
HEADER2				  Byte	 DATOS:0391
HEADER3				  Byte	 DATOS:0611
IMPRIMIR			  Near	 CODIGO:0000
INICIO				  Near	 CODIGO:025B
LARGO				  Word	 DATOS:0724
LCLAVE				  Word	 DATOS:0202
LEERH				  Near	 CODIGO:0196
LINECOMMAND			  Byte	 DATOS:0622
Turbo Assembler	 Version 4.1	    05/12/19 23:24:55	    Page 14
Symbol Table



LONGLC				  Number 0080
MOSTRARI			  Near	 CODIGO:033C
MSG1				  Byte	 DATOS:0726
MSG2				  Byte	 DATOS:074D
MSG3				  Byte	 DATOS:0797
MSG4				  Byte	 DATOS:07A6
MSG5				  Byte	 DATOS:07ED
MSG6				  Byte	 DATOS:0827
MSG7				  Byte	 DATOS:0869
PALETA				  Byte	 DATOS:0309
PINTAR				  Near	 CODIGO:01BB
PLOOP				  Near	 CODIGO:01C5
PROCESOC			  Near	 CODIGO:0124
PROCESOCD			  Near	 CODIGO:0092
RE				  Near	 CODIGO:0226
SACLAVE				  Near	 CODIGO:02DD
SADCLAVE			  Near	 CODIGO:0317
SALIDAD				  Near	 CODIGO:00D6
SALIDADES			  Near	 CODIGO:002C
SALIDADESENCIPTAR		  Near	 CODIGO:0330
SALIDAENC			  Near	 CODIGO:003F
SALIDALECTOR			  Near	 CODIGO:02F6
SALIDAMOSTRAR			  Near	 CODIGO:0351
SALIDAU				  Near	 CODIGO:0139
SALIDAUD			  Near	 CODIGO:00A7
SALIR				  Near	 CODIGO:0179
SALIRSUMAD			  Near	 CODIGO:0016
SCICLO				  Near	 CODIGO:016D
SCLAVE				  Word	 DATOS:0200
SLOOP				  Near	 CODIGO:01E0
STEXTO				  Near	 CODIGO:02C1
SUMAD				  Near	 CODIGO:0008
SUMADORC			  Near	 CODIGO:0143
TEXTO				  Byte	 DATOS:020A
UBICADOR			  Near	 CODIGO:00E5
UBICADORD			  Near	 CODIGO:0053
VAR1				  Byte	 DATOS:0899
VAR2				  Byte	 DATOS:089B
VAR3				  Byte	 DATOS:089D
VAR4				  Byte	 DATOS:089F

Macro Name

COMPARAR
IMPRIMIRP
LISTPOP
LISTPUSH
PINTARM
PPILA

Groups & Segments		  Bit Size Align  Combine Class

CODIGO				  16  0362 Para	  none
DATOS				  16  08A3 Para	  none
PILA				  16  FFFF Para	  none
Turbo Assembler	 Version 4.1	    05/12/19 23:24:55	    Page 15
Error Summary



*Warning* proy.ASM(393)	[Constant] assumed to mean immediate constant
