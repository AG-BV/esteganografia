Turbo Assembler	 Version 4.1	    04/19/19 24:11:16	    Page 1
proy.ASM



      1				     include macro.asm
1     2				     pintarM macro
1     3					     mov ah, 0Ch
1     4					     mov al, ColorCommand; color
1     5					     mov bh, 0
1     6					     int 10h
1     7				     endm
1     8
1     9				     ppila macro
1    10					     push cx
1    11					     push bx
1    12					     call busqueda
1    13					     pop cx
1    14				     endm
1    15
1    16				     ListPush  Macro lista
1    17					 IRP i,<lista>
1    18						     Push i
1    19					 EndM
1    20				     EndM
1    21
1    22				     ListPop  Macro lista
1    23					     IRP i,<lista>
1    24						     Pop i
1    25					     EndM
1    26				     EndM
1    27
1    28				     comparar Macro line, var
1    29					     mov cx, 2
1    30					     lea di, line
1    31					     lea si, var
1    32					     rep cmpsb
1    33				     endM
     34				     ;------------------------------------------------------------------------------
     35
     36	0000			     Pila Segment
     37	0000  FFFF*(??)		      db 0FFFFh	Dup (?)
     38	FFFF			     Pila EndS
     39
     40				     ;------------------------------------------------------------------------------
     41
     42	0000			     Datos Segment
     43	0000  ??			     filename db ?
     44	0001  4D 6F 63 6F 4C 6F	63+	     clave db 'MocoLoco$'
     45	      6F 24
     46	000A  ????			     sclave dw ?
     47	000C  ????			     lclave dw ?
     48	000E  ????			     fila dw ?
     49	0010  ????			     columna dw	?
     50
     51	0012  00 04 02 06 01 05	03+	     paleta  db	00h, 04h, 02h, 06h, 01h, 05h, 03h, 07h,	08h, 0Ch, 0Ah, 0Eh, 9h,	0Dh, 0Bh, 0Fh
     52	      07 08 0C 0A 0E 09	0D+
     53	      0B 0F
     54
     55	0022  ????			     fileH dw ?
     56
     57	0024  76*(00)			     Header db 118 dup (0)
Turbo Assembler	 Version 4.1	    04/19/19 24:11:16	    Page 2
proy.ASM



     58	009A  0280*(00)			     Header2 db	640 dup	(0)
     59	031A  ??			     ColorCommand db ?
     60	031B  FF*(??)			     LineCommand db    0FFh Dup	(?)  ;255 bits,	por la linea de	comandos
     61	041A  24					     db	'$'
     62
     63	041B  ????			     ancho dw ?
     64	041D  ????			     largo dw ?
     65
     66	041F  2D 2D 2D 2D 2D 2D	2D+	     msg1 db '--------Programa esteganografia--------'
     67	      2D 50 72 6F 67 72	61+
     68	      6D 61 20 65 73 74	65+
     69	      67 61 6E 6F 67 72	61+
     70	      66 69 61 2D 2D 2D	2D+
     71	      2D 2D 2D 2D
     72	0446  0A 0D 46 6F 72 6D	61+	     msg2 db 10,13,'Formato de uso: estega /e /t:"texto" /? /d /c:"clave" /bmp:"archivo.bmp"'
     73	      74 6F 20 64 65 20	75+
     74	      73 6F 3A 20 65 73	74+
     75	      65 67 61 20 2F 65	20+
     76	      2F 74 3A 22 74 65	78+
     77	      74 6F 22 20 2F 3F	20+
     78	      2F 64 20 2F 63 3A	22+
     79	      63 6C 61 76 65 22	20+
     80	      2F 62 6D 70 3A 22	61+
     81	      72 63 68 69 76 6F	2E+
     82	      62 6D 70 22
     83	0490  0A 0D 2F 68 20 6F	20+	     msg3 db 10,13,'/h o /H Ayuda'
     84	      2F 48 20 41 79 75	64+
     85	      61
     86	049F  0A 0D 2F 65 20 6F	20+	     msg4 db 10,13,'/e o /E Esteganografiar el mensaje "texto" con la "clave" en el "bmp"'
     87	      2F 45 20 45 73 74	65+
     88	      67 61 6E 6F 67 72	61+
     89	      66 69 61 72 20 65	6C+
     90	      20 6D 65 6E 73 61	6A+
     91	      65 20 22 74 65 78	74+
     92	      6F 22 20 63 6F 6E	20+
     93	      6C 61 20 22 63 6C	61+
     94	      76 65 22 20 65 6E	20+
     95	      65 6C 20 22 62 6D	70+
     96	      22
     97	04E6  0A 0D 2F 64 20 6F	20+	     msg5 db 10,13,'/d o /D Desencriptar el mensaje con	la "clave" en el bmp'
     98	      2F 44 20 44 65 73	65+
     99	      6E 63 72 69 70 74	61+
    100	      72 20 65 6C 20 6D	65+
    101	      6E 73 61 6A 65 20	63+
    102	      6F 6E 20 6C 61 20	22+
    103	      63 6C 61 76 65 22	20+
    104	      65 6E 20 65 6C 20	62+
    105	      6D 70
    106	0520  0A 0D 22 61 72 63	68+	     msg6 db 10,13,'"archivo" Es el nombre del archivo debe ser	un bmp de 16 colores'
    107	      69 76 6F 22 20 45	73+
    108	      20 65 6C 20 6E 6F	6D+
    109	      62 72 65 20 64 65	6C+
    110	      20 61 72 63 68 69	76+
    111	      6F 20 64 65 62 65	20+
    112	      73 65 72 20 75 6E	20+
    113	      62 6D 70 20 64 65	20+
    114	      31 36 20 63 6F 6C	6F+
Turbo Assembler	 Version 4.1	    04/19/19 24:11:16	    Page 3
proy.ASM



    115	      72 65 73
    116	0562  0A 0D 65 73 74 65	67+	     msg7 db 10,13,'estega /bmp:"archivo.bmp" para mostrar imagen$'
    117	      61 20 2F 62 6D 70	3A+
    118	      22 61 72 63 68 69	76+
    119	      6F 2E 62 6D 70 22	20+
    120	      70 61 72 61 20 6D	6F+
    121	      73 74 72 61 72 20	69+
    122	      6D 61 67 65 6E 24
    123
    124	0592  2F 68			     var1 db '/h'
    125	0594  2F 65			     var2 db '/e'
    126	0596  2F 64			     var3 db '/d'
    127	0598  2F 62 6D 70		     var4 db '/bmp'
    128	059C			     Datos EndS
    129
    130	0000			     Codigo Segment
    131				     Assume CS:Codigo, DS:Datos
    132
    133	0000			     imprimir proc near
    134	0000  B4 09			     mov ah, 09h
    135	0002  BA 041Fr			     lea dx, msg1
    136	0005  CD 21			     int 21h
    137	0007  C3			     ret
    138	0008			     imprimir endp
    139
    140	0008			     sumaD proc	near
    141	0008  58			     pop ax
    142	0009  59			     pop cx
    143	000A  50			     push ax
    144	000B  33 DB			     xor bx, bx
    145	000D				     cicloSuma:
    146	000D  83 FB 10				     cmp bx, 10h
    147	0010  74 04				     jz	salirSumaD
    148	0012  41				     inc cx
    149	0013  43				     inc bx
    150	0014  EB F7				     jmp cicloSuma
    151
    152	0016				     salirSumaD:
    153	0016  58				     pop ax
    154	0017  51				     push cx
    155	0018  50				     push ax
    156	0019  C3				     ret
    157	001A			     sumaD endp
    158
    159	001A			     ubicador proc near
    160	001A  B4 3D			     mov ah, 3Dh
    161	001C  32 C0			     xor al, al
    162	001E  BA 0000r			     mov dx, offset filename
    163	0021  CD 21			     int 21h
    164	0023  A3 0022r			     mov [fileH], ax
    165
    166	0026  A1 000Ar			     mov ax, sclave
    167	0029  8B 1E 000Ar		     mov bx, sclave
    168	002D  25 FFF0			     and ax, 1111111111110000b
    169	0030  83 E3 0F			     and bx, 0000000000001111b
    170	0033  A3 000Er			     mov fila, ax
    171	0036  89 1E 0010r		     mov columna, bx
Turbo Assembler	 Version 4.1	    04/19/19 24:11:16	    Page 4
proy.ASM



    172	003A  B4 3F			     mov ah,3fh
    173	003C  8B 1E 0022r		     mov bx,[fileH]
    174	0040  B9 0010			     mov cx,16
    175	0043  BA 0024r			     mov dx,offset Header
    176	0046  CD 21			     int 21h
    177	0048  33 C9			     xor cx,cx
    178
    179	004A				     bfila:
    180	004A  3B 0E 000Er			     cmp cx, fila
    181	004E  74 15				     jz	procesoC
    182	0050  51				     push cx
    183	0051  B4 3F				     mov ah,3fh
    184	0053  8B 1E 0022r			     mov bx,[fileH]
    185	0057  B9 0010				     mov cx,16
    186	005A  BA 0024r				     mov dx,offset Header
    187	005D  CD 21				     int 21h
    188	005F  E8 FFA6				     call sumaD
    189	0062  59				     pop cx
    190	0063  EB E5				     jmp bfila
    191
    192	0065				     procesoC:
    193	0065  33 C0				     xor ax,ax
    194	0067  33 C9				     xor cx,cx
    195	0069  33 F6				     xor si,si
    196	006B  BE 0024r				     lea si, [Header]
    197	006E				     bcolumna:
    198	006E  3B 0E 0010r			     cmp cx, columna
    199	0072  74 06				     jz	salidaU
    200	0074  8A 04				     mov al, byte ptr [si]
    201	0076  41				     inc cx
    202	0077  46				     inc si
    203	0078  EB F4				     jmp bcolumna
    204
    205	007A				     salidaU:
    206	007A  58				     pop ax
    207	007B  56				     push si
    208	007C  50				     push ax
    209	007D  C3				     ret
    210	007E			     ubicador endp
    211
    212	007E			     sumadorC proc near
    213	007E  BE 0001r			     lea si, clave
    214	0081  33 C9			     xor cx,cx
    215	0083  8A 04			     mov al, byte ptr [si]
    216	0085  46			     inc si
    217	0086  41			     inc cx
    218	0087  32 E4			     xor ah,ah
    219	0089  A3 000Ar			     mov sclave, ax
    220	008C  3C 24			     cmp al, '$'
    221	008E  74 11			     jz	fciclo
    222
    223	0090				     ciclo:
    224	0090  8A 1C				     mov bl, byte ptr [si]
    225	0092  80 FB 24				     cmp bl, '$'
    226	0095  74 0A				     jz	fciclo
    227	0097  32 FF				     xor bh,bh
    228	0099  01 1E 000Ar			     add sclave, bx
Turbo Assembler	 Version 4.1	    04/19/19 24:11:16	    Page 5
proy.ASM



    229	009D  46				     inc si
    230	009E  41				     inc cx
    231	009F  EB EF				     jmp ciclo
    232
    233	00A1				     fciclo:
    234	00A1  89 0E 000Cr		     mov lclave, cx
    235	00A5  A1 000Ar			     mov ax, sclave
    236	00A8				     sciclo:
    237	00A8  83 F9 00				     cmp cx, 0000h
    238	00AB  74 07				     jz	salir
    239	00AD  01 06 000Ar			     add sclave, ax
    240	00B1  49				     dec cx
    241	00B2  EB F4				     jmp sciclo
    242
    243	00B4				     salir:
    244	00B4  C3				     ret
    245
    246	00B5			     sumadorC endp
    247
    248	00B5			     busqueda proc near
    249	00B5  59			     pop cx
    250	00B6  58			     pop ax
    251	00B7  51			     push cx
    252	00B8  8A C4			     mov al, ah
    253	00BA  32 E4			     xor ah, ah
    254	00BC  BB 0012r			     lea bx, paleta
    255	00BF  D7			     xlat
    256	00C0  A2 031Ar			     mov ColorCommand, al
    257	00C3  C3			     ret
    258	00C4			     endP
    259
    260	00C4			     abrirArchivo proc
    261	00C4  B4 3D			     mov ah, 3Dh
    262	00C6  32 C0			     xor al, al
    263	00C8  BA 0000r			     mov dx, offset filename
    264	00CB  CD 21			     int 21h
    265	00CD  A3 0022r			     mov [fileH], ax
    266	00D0  C3			     ret
    267	00D1			     endp abrirArchivo
    268
    269	00D1			     leerH proc
    270	00D1  B4 3F			     mov ah,3fh
    271	00D3  8B 1E 0022r		     mov bx,[fileH]
    272	00D7  B9 0076			     mov cx,118
    273	00DA  BA 0024r			     mov dx,offset Header
    274	00DD  CD 21			     int 21h
    275
    276	00DF  50			     push ax
    277	00E0  8A 26 0037r		     mov ah, [Header]+19
    278	00E4  A0 0036r			     mov al, [Header]+18
    279	00E7  A3 041Br			     mov ancho,	ax
    280
    281	00EA  8A 26 003Br		     mov ah, [Header]+23
    282	00EE  A0 003Ar			     mov al, [Header]+22
    283	00F1  A3 041Dr			     mov largo,	ax
    284	00F4  58			     pop ax
    285
Turbo Assembler	 Version 4.1	    04/19/19 24:11:16	    Page 6
proy.ASM



    286	00F5  C3			     ret
    287	00F6			     endp leerH
    288
    289	00F6			     pintar proc
    290	00F6  B4 00			     mov ah, 00h
    291	00F8  B0 12			     mov al, 12h
    292	00FA  CD 10			     int 10h
    293	00FC  BA 01E0			     mov dx, 1E0H
    294	00FF  52			     push dx
    295	0100			     ploop:
    296
    297	0100  B8 3F00			     mov ax,3f00h
    298	0103  8B 1E 0022r		     mov bx,[fileH]
    299	0107  B9 0140			     mov cx,140h
    300	010A  BA 009Ar			     mov dx,offset Header2
    301	010D  CD 21			     int 21h
    302	010F  BE 009Ar			     lea si, [Header2]
    303	0112  5A			     pop dx
    304	0113  83 FA 00			     cmp dx, 0
    305	0116  74 49			     jz	re
    306	0118  B9 0000			     mov cx, 0
    307	011B				     sloop:
    308	011B  81 F9 0280			     cmp cx, 280h
    309	011F  74 3C				     jz	floop
    310	0121  8A 04				     mov al, byte ptr [si]
    311	0123  8A 24				     mov ah, byte ptr [si]
    312	0125  46				     inc si
    313	0126  24 0F				     and al, 00001111b
    314	0128  80 E4 F0				     and ah, 11110000b
    315	012B  D0 C4 D0 C4 D0 C4	D0+		     rol Ah, 4
    316	      C4
    317	0133  8B D8				     mov bx, ax
    318	0135  53				     push bx
    319						     ;---------
    320	0136  33 C0				     xor ax,ax
    321						     ppila
1   322	0138  51			     push cx
1   323	0139  53			     push bx
1   324	013A  E8 FF78			     call busqueda
1   325	013D  59			     pop cx
    326						     pintarM
1   327	013E  B4 0C			     mov ah, 0Ch
1   328	0140  A0 031Ar			     mov al, ColorCommand; color
1   329	0143  B7 00			     mov bh, 0
1   330	0145  CD 10			     int 10h
    331						     ;---------
    332	0147  41				     inc cx
    333	0148  5B				     pop bx
    334	0149  8A FB				     mov bh, bl
    335						     ppila
1   336	014B  51			     push cx
1   337	014C  53			     push bx
1   338	014D  E8 FF65			     call busqueda
1   339	0150  59			     pop cx
    340						     pintarM
1   341	0151  B4 0C			     mov ah, 0Ch
1   342	0153  A0 031Ar			     mov al, ColorCommand; color
Turbo Assembler	 Version 4.1	    04/19/19 24:11:16	    Page 7
proy.ASM



1   343	0156  B7 00			     mov bh, 0
1   344	0158  CD 10			     int 10h
    345	015A  41				     inc cx
    346						     ;---------
    347	015B  EB BE				     jmp sloop
    348	015D			     floop:
    349	015D  4A			     dec dx
    350	015E  52			     push dx
    351	015F  EB 9F			     jmp ploop
    352
    353	0161			     re:
    354	0161  B4 01			     mov ah,1
    355	0163  CD 21			     int 21h
    356
    357	0165  B4 00			     mov ah, 0
    358	0167  B0 02			     mov al, 2
    359	0169  CD 10			     int 10h
    360
    361	016B  B4 3E			     mov ah,3eh
    362	016D  CD 21			     int 21h
    363	016F  C3			     ret
    364
    365	0170  C3			     ret
    366	0171			     endp pintar
    367
    368	0171			     GetCommanderLine Proc Near
    369	      =0080			     LongLC    EQU   80h
    370					     ListPush  <Es, Di,	Si, Cx,	Bp>
2   371	0171  06				     Push Es
2   372	0172  57				     Push Di
2   373	0173  56				     Push Si
2   374	0174  51				     Push Cx
2   375	0175  55				     Push Bp
    376	0176  8B EC			     Mov   Bp,Sp
    377	0178  8C C0			     Mov   Ax,Es
    378	017A  8E D8			     Mov   Ds,Ax
    379	017C  8B 7E 0C			     Mov   Di,12[Bp]
    380	017F  8B 46 0E			     Mov   Ax,14[Bp]
    381	0182  8E C0			     Mov   Es,Ax
    382	0184  33 C9			     Xor   Cx,Cx
    383	0186  8A 0E 0080		     Mov   Cl,Byte Ptr Ds:[LongLC]
    384	018A  BE 0082			     Mov   Si,2[LongLC]
*Warning* proy.ASM(277)	[Constant] assumed to mean immediate constant
    385	018D  F3> A4			     Rep   Movsb
    386					     ListPop <Bp, Bx, Si, Di, Es>
2   387	018F  5D				     Pop Bp
2   388	0190  5B				     Pop Bx
2   389	0191  5E				     Pop Si
2   390	0192  5F				     Pop Di
2   391	0193  07				     Pop Es
    392	0194  C2 000E			     Ret   14
    393	0197			     GetCommanderLine EndP
    394
    395	0197			     Inicio:
    396	0197  B8 0000s			     Mov   Ax,Seg LineCommand
    397	019A  50			     Push  Ax
    398	019B  B8 031Br			     Lea   Ax,LineCommand
Turbo Assembler	 Version 4.1	    04/19/19 24:11:16	    Page 8
proy.ASM



    399	019E  50			     Push  Ax
    400	019F  E8 FFCF			     Call  GetCommanderLine
    401
    402	01A2  B8 0000s			     mov ax, datos
    403	01A5  8E D8			     mov ds, ax
    404	01A7  06			     push es
    405	01A8  8E C0			     mov es, ax
    406
    407					     comparar LineCommand, var1
1   408	01AA  B9 0002			     mov cx, 2
1   409	01AD  BF 031Br			     lea di, LineCommand
1   410	01B0  BE 0592r			     lea si, var1
1   411	01B3  F3> A6			     rep cmpsb
    412	01B5  74 27			     jz	ayuda
    413
    414					     comparar LineCommand, var2
1   415	01B7  B9 0002			     mov cx, 2
1   416	01BA  BF 031Br			     lea di, LineCommand
1   417	01BD  BE 0594r			     lea si, var2
1   418	01C0  F3> A6			     rep cmpsb
    419	01C2  74 20			     jz	encriptar
    420
    421					     comparar LineCommand, var3
1   422	01C4  B9 0002			     mov cx, 2
1   423	01C7  BF 031Br			     lea di, LineCommand
1   424	01CA  BE 0596r			     lea si, var3
1   425	01CD  F3> A6			     rep cmpsb
    426	01CF  74 16			     jz	desencriptar
    427
    428					     comparar LineCommand, var4
1   429	01D1  B9 0002			     mov cx, 2
1   430	01D4  BF 031Br			     lea di, LineCommand
1   431	01D7  BE 0598r			     lea si, var4
1   432	01DA  F3> A6			     rep cmpsb
    433	01DC  74 0C			     jz	mostrarI
    434
    435	01DE				     ayuda:
    436	01DE  E8 FE1F				     call imprimir
    437	01E1  EB 0C 90				     jmp final
    438
    439	01E4				     encriptar:
    440	01E4  EB 09 90				     jmp final
    441
    442	01E7				     desencriptar:
    443	01E7  EB 06 90				     jmp final
    444
    445	01EA				     mostrarI:
    446	01EA  BE 0320r				     lea si, LineCommand+5
    447	01ED  8A 04				     mov al, byte ptr[si]
    448
    449
    450					     ; call abrirArchivo
    451					     ; call leerH
    452					     ; call pintar
    453					     ; call sumadorC
    454					     ; call ubicador
    455
Turbo Assembler	 Version 4.1	    04/19/19 24:11:16	    Page 9
proy.ASM



    456
    457	01EF			     final:
    458	01EF  B8 4C00			     mov ax, 4C00h
    459	01F2  CD 21			     int 21h
    460	01F4			     Codigo EndS
    461					     End Inicio
Turbo Assembler	 Version 4.1	    04/19/19 24:11:16	    Page 10
Symbol Table




Symbol Name			  Type	 Value

??DATE				  Text	 "04/19/19"
??FILENAME			  Text	 "proy	  "
??TIME				  Text	 "24:11:15"
??VERSION			  Number 040A
@CPU				  Text	 0101H
@CURSEG				  Text	 CODIGO
@FILENAME			  Text	 PROY
@WORDSIZE			  Text	 2
ABRIRARCHIVO			  Near	 CODIGO:00C4
ANCHO				  Word	 DATOS:041B
AYUDA				  Near	 CODIGO:01DE
BCOLUMNA			  Near	 CODIGO:006E
BFILA				  Near	 CODIGO:004A
BUSQUEDA			  Near	 CODIGO:00B5
CICLO				  Near	 CODIGO:0090
CICLOSUMA			  Near	 CODIGO:000D
CLAVE				  Byte	 DATOS:0001
COLORCOMMAND			  Byte	 DATOS:031A
COLUMNA				  Word	 DATOS:0010
DESENCRIPTAR			  Near	 CODIGO:01E7
ENCRIPTAR			  Near	 CODIGO:01E4
FCICLO				  Near	 CODIGO:00A1
FILA				  Word	 DATOS:000E
FILEH				  Word	 DATOS:0022
FILENAME			  Byte	 DATOS:0000
FINAL				  Near	 CODIGO:01EF
FLOOP				  Near	 CODIGO:015D
GETCOMMANDERLINE		  Near	 CODIGO:0171
HEADER				  Byte	 DATOS:0024
HEADER2				  Byte	 DATOS:009A
IMPRIMIR			  Near	 CODIGO:0000
INICIO				  Near	 CODIGO:0197
LARGO				  Word	 DATOS:041D
LCLAVE				  Word	 DATOS:000C
LEERH				  Near	 CODIGO:00D1
LINECOMMAND			  Byte	 DATOS:031B
LONGLC				  Number 0080
MOSTRARI			  Near	 CODIGO:01EA
MSG1				  Byte	 DATOS:041F
MSG2				  Byte	 DATOS:0446
MSG3				  Byte	 DATOS:0490
MSG4				  Byte	 DATOS:049F
MSG5				  Byte	 DATOS:04E6
MSG6				  Byte	 DATOS:0520
MSG7				  Byte	 DATOS:0562
PALETA				  Byte	 DATOS:0012
PINTAR				  Near	 CODIGO:00F6
PLOOP				  Near	 CODIGO:0100
PROCESOC			  Near	 CODIGO:0065
RE				  Near	 CODIGO:0161
SALIDAU				  Near	 CODIGO:007A
SALIR				  Near	 CODIGO:00B4
SALIRSUMAD			  Near	 CODIGO:0016
SCICLO				  Near	 CODIGO:00A8
Turbo Assembler	 Version 4.1	    04/19/19 24:11:16	    Page 11
Symbol Table



SCLAVE				  Word	 DATOS:000A
SLOOP				  Near	 CODIGO:011B
SUMAD				  Near	 CODIGO:0008
SUMADORC			  Near	 CODIGO:007E
UBICADOR			  Near	 CODIGO:001A
VAR1				  Byte	 DATOS:0592
VAR2				  Byte	 DATOS:0594
VAR3				  Byte	 DATOS:0596
VAR4				  Byte	 DATOS:0598

Macro Name

COMPARAR
LISTPOP
LISTPUSH
PINTARM
PPILA

Groups & Segments		  Bit Size Align  Combine Class

CODIGO				  16  01F4 Para	  none
DATOS				  16  059C Para	  none
PILA				  16  FFFF Para	  none
Turbo Assembler	 Version 4.1	    04/19/19 24:11:16	    Page 12
Error Summary



*Warning* proy.ASM(277)	[Constant] assumed to mean immediate constant
